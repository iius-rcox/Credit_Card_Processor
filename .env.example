# Credit Card Processor - Environment Configuration Template
# =======================================================
# Copy this file to .env and configure for your environment
# 
# SECURITY WARNING: 
# - Never commit .env files to version control
# - Use strong, unique values for production
# - Regenerate all secrets when deploying to production
#
# Quick Start: Run 'python setup-config.py' for interactive configuration
# =======================================================

# =======================================================
# REQUIRED SECURITY SETTINGS (Must be configured for production)
# =======================================================

# Admin Users - Comma-separated list of admin usernames (case-insensitive)
# These users will have full administrative access to the application
# Example: ADMIN_USERS=john.doe,jane.smith,admin
ADMIN_USERS=

# Session Secret Key - CRITICAL: Must be 32+ characters and cryptographically secure
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
# This key is used for session management and security tokens
SESSION_SECRET_KEY=

# CORS Origins - Comma-separated list of allowed frontend URLs
# Include all URLs where your frontend will be hosted
# Example: CORS_ORIGINS=https://myapp.com,https://www.myapp.com
CORS_ORIGINS=http://localhost:3000

# Trusted Hosts - Comma-separated list of trusted hostnames/domains
# Include all domains that should be allowed to serve the application
# Example: TRUSTED_HOSTS=myapp.com,*.myapp.com,localhost,127.0.0.1
TRUSTED_HOSTS=localhost,127.0.0.1,*.local

# =======================================================
# AZURE INTEGRATION (Optional - for enhanced OCR capabilities)
# =======================================================
# These settings enable Azure Document Intelligence for improved OCR processing
# If not configured, the application will use local Tesseract OCR

# Azure Document Intelligence Service Endpoint
# Format: https://YOUR_SERVICE_NAME.cognitiveservices.azure.com/
# Example based on your infrastructure: https://iius-doc-intelligence.cognitiveservices.azure.com/
AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT=

# Azure Document Intelligence API Key
# Find this in Azure Portal > Your Document Intelligence Resource > Keys and Endpoint
AZURE_DOCUMENT_INTELLIGENCE_KEY=

# Custom Azure Model IDs (Optional - for enhanced accuracy)
# If you've trained custom models in Azure Document Intelligence, specify their IDs here
# Leave blank to use Azure's prebuilt models
AZURE_CAR_MODEL_ID=
AZURE_RECEIPT_MODEL_ID=

# =======================================================
# ENVIRONMENT & DEPLOYMENT SETTINGS
# =======================================================

# Environment - Controls behavior and security settings
# Values: development, staging, production
ENVIRONMENT=development

# Debug Mode - Enables detailed error messages and developer features
# Set to false for production
DEBUG=true

# Force HTTPS - Redirects all HTTP traffic to HTTPS
# Set to true for production deployments
FORCE_HTTPS=false

# =======================================================
# SESSION & AUTHENTICATION SETTINGS
# =======================================================

# Session Timeout - Minutes before user sessions expire
# Default: 480 minutes (8 hours)
SESSION_TIMEOUT_MINUTES=480

# Login Security - Brute force protection settings
MAX_LOGIN_ATTEMPTS=5
LOGIN_LOCKOUT_MINUTES=15

# =======================================================
# SECURITY HEADERS & RATE LIMITING
# =======================================================

# Security Headers - Adds protective HTTP headers
# Recommended: true for all environments
ENABLE_SECURITY_HEADERS=true

# HSTS Max Age - HTTP Strict Transport Security duration in seconds
# Default: 31536000 (1 year)
HSTS_MAX_AGE=31536000

# Rate Limiting - API request throttling
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60

# =======================================================
# APPLICATION SETTINGS
# =======================================================

# Application Information
APP_NAME=Credit Card Processor
APP_VERSION=1.0.0

# File Upload Limits
MAX_FILE_SIZE_MB=100

# Processing Limits
MAX_EMPLOYEES=100

# Data Paths (Relative to application root)
DATABASE_PATH=./data/database.db
UPLOAD_PATH=./data/uploads
EXPORT_PATH=./data/exports

# =======================================================
# MONITORING & ALERTING (Optional)
# =======================================================
# These settings are used by the monitoring stack (Grafana, Prometheus)

# Grafana Admin Credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=

# Email Alerts Configuration (Optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=
SMTP_USE_TLS=true

# Alert Recipients - Comma-separated email addresses
ALERT_EMAILS=

# =======================================================
# AZURE INFRASTRUCTURE REFERENCES
# =======================================================
# These are reference values based on your existing Azure resources
# Update these to match your actual Azure infrastructure

# Azure Resource Information (for reference)
# AZURE_RESOURCE_GROUP=rg-iius-dev
# AZURE_LOCATION=southcentralus
# AZURE_AKS_CLUSTER=dev-aks
# AZURE_CONTAINER_REGISTRY=iiusacr.azurecr.io
# AZURE_KEY_VAULT=iius-akv
# AZURE_STORAGE_ACCOUNT=cssa915121f46f2ae0d374e7
# AZURE_SQL_SERVER=INSCOLVSQL

# =======================================================
# DEVELOPMENT SETTINGS (Development Environment Only)
# =======================================================

# Log Level - Controls application logging verbosity
# Values: debug, info, warning, error, critical
LOG_LEVEL=debug

# Hot Reload Settings (Docker development)
PYTHONDONTWRITEBYTECODE=1
PYTHONUNBUFFERED=1
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true

# Node.js Environment
NODE_ENV=development

# Frontend Settings
VITE_API_BASE_URL=http://localhost:8000
VITE_APP_TITLE=Credit Card Processor (Development)

# =======================================================
# CONFIGURATION VALIDATION
# =======================================================
# The application will validate these settings on startup
# Check logs for any configuration warnings or errors
#
# To test your configuration:
# 1. Copy this file to .env
# 2. Fill in the required values above
# 3. Run: python backend/test_config.py
# 4. Or start the application and check startup logs