# Frontend Development Dockerfile
# Optimized for Vite dev server with hot reload

FROM node:20-alpine

# Set environment variables
ENV NODE_ENV=development \
    CHOKIDAR_USEPOLLING=true \
    WATCHPACK_POLLING=true \
    ROLLUP_CACHE_DIR=/tmp/rollup-cache

# Install curl and build dependencies for native modules
RUN apk add --no-cache curl build-base python3 make g++

# Create application directory
WORKDIR /app

# Copy package files and install dependencies
# This is done first to leverage Docker layer caching
COPY package*.json ./
RUN rm -rf node_modules package-lock.json && \
    npm cache clean --force && \
    npm install --silent && \
    npm install vue-router@^4.2.5 --save && \
    npm install --force @rollup/rollup-linux-x64-musl@4.0.0 --silent || \
    npm rebuild --silent || true

# Copy configuration files
COPY vite.config.js ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY index.html ./

# Copy source code (will be overridden by volume mount in development)
COPY src/ ./src/
# Create public directory if it doesn't exist
RUN mkdir -p public

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 -G nodejs && \
    chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Development command with hot reload
# Vite dev server with host binding for Docker container access
CMD ["npm", "run", "dev", "--", \
     "--host", "0.0.0.0", \
     "--port", "3000", \
     "--strictPort"]