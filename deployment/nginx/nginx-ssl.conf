events {
    worker_connections 1024;
}

http {
    # Upstream backend server
    upstream backend {
        server backend:8000;
        keepalive 32;
    }

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # HTTP server - redirect all traffic to HTTPS
    server {
        listen 80;
        server_name creditcard.company.local synology.company.local;

        # Allow Let's Encrypt challenges (if using)
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name creditcard.company.local synology.company.local;

        # SSL Certificate paths
        # Option 1: Internal CA certificates
        ssl_certificate /etc/nginx/ssl/internal-ca/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/internal-ca/key.pem;

        # Option 2: Let's Encrypt (comment above, uncomment below)
        # ssl_certificate /etc/letsencrypt/live/creditcard.company.local/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/creditcard.company.local/privkey.pem;

        # Option 3: Self-signed (for development only)
        # ssl_certificate /etc/nginx/ssl/self-signed/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/self-signed/key.pem;

        # Modern SSL configuration for internal networks
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # SSL session caching for performance
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # OCSP stapling (if using public CA)
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # ssl_trusted_certificate /etc/nginx/ssl/internal-ca/chain.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Content Security Policy for internal network
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss://$host" always;

        # Logging
        access_log /var/log/nginx/creditcard-access.log;
        error_log /var/log/nginx/creditcard-error.log warn;

        # Frontend static files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;

            # Cache static assets
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
            }
        }

        # API proxy with rate limiting
        location /api {
            # Apply rate limiting
            limit_req zone=api_limit burst=20 nodelay;

            # Proxy to backend
            proxy_pass http://backend;
            proxy_http_version 1.1;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Headers for proper proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeout settings for long operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Buffering settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Handle large file uploads
            client_max_body_size 400M;
            client_body_buffer_size 1M;
        }

        # WebSocket endpoint
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket idle timeout
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend/health;
            access_log off;

            # Allow health checks from internal monitoring
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;
        }

        # Metrics endpoint (internal only)
        location /metrics {
            proxy_pass http://backend/metrics;

            # Restrict to internal monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;
        }
    }

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # General settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}