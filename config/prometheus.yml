# Prometheus configuration for monitoring Credit Card Processor
# This configuration sets up metric collection from various sources

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    service: 'credit-card-processor'
    environment: 'production'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Main application metrics
  - job_name: 'credit-card-backend'
    static_configs:
      - targets: ['backend:8001']
    metrics_path: '/api/monitoring/metrics/prometheus'
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      format: ['prometheus']

  # System metrics from node_exporter
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 15s

  # Docker container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s

  # Application-specific health checks
  - job_name: 'credit-card-health'
    static_configs:
      - targets: ['backend:8001']
    metrics_path: '/api/health/detailed'
    scrape_interval: 60s
    scrape_timeout: 10s
    metric_relabel_configs:
      # Convert health check status to metrics
      - source_labels: [__name__]
        target_label: __name__
        regex: 'credit_card_(.*)'
        replacement: 'health_check_${1}'

  # Custom application metrics
  - job_name: 'credit-card-performance'
    static_configs:
      - targets: ['backend:8001']
    metrics_path: '/api/monitoring/application'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Database metrics (if using postgres_exporter or similar)
  # - job_name: 'database'
  #   static_configs:
  #     - targets: ['postgres-exporter:9187']
  #   scrape_interval: 30s

  # Redis metrics (if using redis_exporter)
  # - job_name: 'redis'
  #   static_configs:
  #     - targets: ['redis-exporter:9121']
  #   scrape_interval: 30s

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://prometheus.example.com/api/v1/write"
#     basic_auth:
#       username: "prometheus"
#       password: "your-password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500